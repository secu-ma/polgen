name: Build and deploy

on:
  push:
    branches: [ main ]


jobs:
  build_wiki:
    runs-on: ubuntu-latest
    name: "Build the Wiki"
    defaults:
      run:
        working-directory: ./wiki


    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: './wiki/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Build site
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wiki
        path: wiki/dist/
        retention-days: 7

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.npm
        key: wiki-${{ runner.os }}-node-${{ hashFiles('wiki/**/package-lock.json') }}
        restore-keys: |
          wiki-${{ runner.os }}-node-

  build_edge_lambda:
    runs-on: ubuntu-latest
    name: "Build the Lambda@Edge code"
    defaults:
      run:
        working-directory: ./deployment/aws/lambda-edge/

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './deployment/aws/lambda-edge/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Build site
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lambda-edge
          path: ./deployment/aws/lambda-edge/src/**/bundle.js
          retention-days: 7

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
          key: lambda-edge-${{ runner.os }}-node-${{ hashFiles('deployment/aws/lambda-edge/**/package-lock.json') }}
          restore-keys: |
            lambda-edge-${{ runner.os }}-node-

  plan_tofu:
    runs-on: ubuntu-latest
    name: "Plan the OpenTofu infrastructure upgrade"
    defaults:
      run:
        working-directory: ./deployment/aws/infrastructure/
    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_wrapper: false

      - name: OpenTofu Init
        run: tofu init -var="unique_seed=${{ github.repository }}/${{ github.ref_name }}"

      - name: OpenTofu Plan
        id: plan
        run: |
          {
            cloudfront_id=$(tofu output -var="unique_seed=${{ github.repository }}/${{ github.ref_name }}" -json cloudfront | jq .id -r)
            origin_path=$(aws cloudfront get-distribution-config --id $cloudfront_id --output=json | jq .DistributionConfig.Origins.Items[0].OriginPath -r)
          } || {
            origin_path=""
          }
          tofu plan -no-color -out=tfplan -var="unique_seed=${{ github.repository }}/${{ github.ref_name }}" -var="origin_path=$origin_path" -var="email=${{ vars.COGNITO_USER_EMAIL }}"

      - name: Upload Tofu plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ./deployment/aws/infrastructure/tfplan
          retention-days: 7

  deploy_aws:
    runs-on: ubuntu-latest
    name: "Deploy the infrastructure and artifacts to AWS"
    needs: [build_wiki, build_edge_lambda, plan_tofu]
    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ./repo

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_wrapper: true

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install boto3
        run: pip install boto3

      - name: OpenTofu Init
        working-directory: ./repo/deployment/aws/infrastructure/
        run: tofu init -var="unique_seed=${{ github.repository }}/${{ github.ref_name }}"

      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Apply Tofu plan
        working-directory: ./repo/deployment/aws/infrastructure/
        run: |
          tofu apply $GITHUB_WORKSPACE/tfplan/tfplan

      - name: Show Tofu Outputs
        id: tofu_output
        working-directory: ./repo/deployment/aws/infrastructure/
        run: |
          tofu output -var="unique_seed=${{ github.repository }}/${{ github.ref_name }}" -json

      - name: Deploy Lambda@Edge and Wiki
        run: |
          echo "${{ steps.tofu_output.outputs.stdout }}"
#          python3 ./repo/deployment/aws/deploy.py  # TODO Add all variables required to deploy
